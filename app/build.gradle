apply plugin: 'com.android.application'


def rootProjFilePath = rootProject.getProjectDir().getAbsolutePath();

def packageTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

def appShortName = "orange"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.youyicheng.KaoLiao"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
        multiDexEnabled true
        flavorDimensions "versionCode"


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            keyAlias 'key'
            keyPassword 'key2019'
            storeFile file(rootProjFilePath + '/app/orangekey.jks')
            storePassword 'key2019'
        }

        release {
            keyAlias 'key'
            keyPassword 'key2019'
            storeFile file(rootProjFilePath + '/app/orangekey.jks')
            storePassword 'key2019'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def baseName = appShortName + "_" + "${defaultConfig.versionName}_${packageTime()}" + "_" + variant.productFlavors[0].name
            def newApkName
            if (variant.buildType.name.equals('release')) {
                newApkName = baseName + '_release.apk'
            } else {
                newApkName = baseName + '_debug.apk'
            }
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = newApkName
            }
        }
    }


    productFlavors {
        orange {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "orange"]
        }

    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.+'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //retrofit2 gson
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.lzy.net:okgo:2.1.3'
    implementation 'com.google.code.gson:gson:2.8.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.android.support:recyclerview-v7:28+'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.0.0'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    //butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation project(':baseholder')
    implementation 'com.kaopiz:kprogresshud:1.0.5'
    implementation project(':refrsh')
    implementation project(':easyPhotos')
}
